---
import type { MarkdownHeading } from "astro";
import { generateToc } from "@/utils/generateToc";
import TOCHeading from "./TocHeading.astro";

interface Props {
  headings: MarkdownHeading[];
}

const { headings } = Astro.props;
const toc = generateToc(headings);
---

<aside class="hidden lg:block sticky top-20 w-64 ml-8 max-h-[calc(100vh-9rem)] overflow-auto">
  <h2 class="font-semibold">目录</h2>
  <ul class="mt-4 text-sm">
    {toc.map(heading => <TOCHeading heading={heading} />)}
  </ul>
</aside>

<script is:inline>
  // 平滑滚动
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener("click", function(e) {
      e.preventDefault();
      const targetId = this.getAttribute("href")?.slice(1);
      const target = document.getElementById(targetId);
      if (target) {
        target.scrollIntoView({ behavior: "smooth" });
        history.pushState(null, "", `#${targetId}`);
      }
    });
  });
</script>

<style>
  aside {
    scrollbar-width: thin;
  }
  aside::-webkit-scrollbar {
    width: 3px;
  }
  aside::-webkit-scrollbar-track {
    background: transparent;
  }
  aside::-webkit-scrollbar-thumb {
    background-color: var(--color-text-muted);
    border-radius: 1.5px;
  }
</style>